import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

public class Calculator2 implements ActionListener {

    private boolean isOperatorClicked = false;
    private boolean operationCompleted = false;
    private JLabel displayLabel;
    private String operator = "";
    private String oldValue = "";

    private JButton sevenButton;
    private JButton eightButton;
    private JButton nineButton;
    private JButton fourButton;
    private JButton fiveButton;
    private JButton sixButton;
    private JButton oneButton;
    private JButton twoButton;
    private JButton threeButton;
    private JButton dotButton;
    private JButton zeroButton;
    private JButton equalButton;
    private JButton plusButton;
    private JButton minusButton;
    private JButton intoButton;
    private JButton divisionButton;
    private JButton clearButton;

    public Calculator2() {
        JFrame jf = new JFrame("Calculator");
        jf.setLayout(null);
        jf.setSize(600, 600);
        jf.setLocation(400, 50);

        displayLabel = new JLabel();
        displayLabel.setBounds(30, 30, 540, 60);
        displayLabel.setFont(new Font("Arial", Font.PLAIN, 40));
        displayLabel.setBackground(Color.lightGray);
        displayLabel.setOpaque(true);
        displayLabel.setHorizontalAlignment(SwingConstants.RIGHT);
        displayLabel.setForeground(Color.black);
        jf.add(displayLabel);

        sevenButton = new JButton("7");
        sevenButton.setFont(new Font("Arial", Font.PLAIN, 40));
        sevenButton.setBounds(30, 120, 80, 80);
        sevenButton.addActionListener(this);
        jf.add(sevenButton);

        eightButton = new JButton("8");
        eightButton.setFont(new Font("Arial", Font.PLAIN, 40));
        eightButton.setBounds(130, 120, 80, 80);
        eightButton.addActionListener(this);
        jf.add(eightButton);

        nineButton = new JButton("9");
        nineButton.setFont(new Font("Arial", Font.PLAIN, 40));
        nineButton.setBounds(230, 120, 80, 80);
        nineButton.addActionListener(this);
        jf.add(nineButton);

        fourButton = new JButton("4");
        fourButton.setFont(new Font("Arial", Font.PLAIN, 40));
        fourButton.setBounds(30, 230, 80, 80);
        fourButton.addActionListener(this);
        jf.add(fourButton);

        fiveButton = new JButton("5");
        fiveButton.setFont(new Font("Arial", Font.PLAIN, 40));
        fiveButton.setBounds(130, 230, 80, 80);
        fiveButton.addActionListener(this);
        jf.add(fiveButton);

        sixButton = new JButton("6");
        sixButton.setFont(new Font("Arial", Font.PLAIN, 40));
        sixButton.setBounds(230, 230, 80, 80);
        sixButton.addActionListener(this);
        jf.add(sixButton);

        oneButton = new JButton("1");
        oneButton.setFont(new Font("Arial", Font.PLAIN, 40));
        oneButton.setBounds(30, 340, 80, 80);
        oneButton.addActionListener(this);
        jf.add(oneButton);

        twoButton = new JButton("2");
        twoButton.setFont(new Font("Arial", Font.PLAIN, 40));
        twoButton.setBounds(130, 340, 80, 80);
        twoButton.addActionListener(this);
        jf.add(twoButton);

        threeButton = new JButton("3");
        threeButton.setFont(new Font("Arial", Font.PLAIN, 40));
        threeButton.setBounds(230, 340, 80, 80);
        threeButton.addActionListener(this);
        jf.add(threeButton);

        dotButton = new JButton(".");
        dotButton.setFont(new Font("Arial", Font.PLAIN, 40));
        dotButton.setBounds(30, 450, 80, 80);
        dotButton.addActionListener(this);
        jf.add(dotButton);

        zeroButton = new JButton("0");
        zeroButton.setFont(new Font("Arial", Font.PLAIN, 40));
        zeroButton.setBounds(130, 450, 80, 80);
        zeroButton.addActionListener(this);
        jf.add(zeroButton);

        equalButton = new JButton("=");
        equalButton.setFont(new Font("Arial", Font.PLAIN, 40));
        equalButton.setBounds(230, 450, 80, 80);
        equalButton.addActionListener(this);
        jf.add(equalButton);

        plusButton = new JButton("+");
        plusButton.setFont(new Font("Arial", Font.PLAIN, 40));
        plusButton.setBounds(340, 450, 80, 80);
        plusButton.addActionListener(this);
        jf.add(plusButton);

        clearButton = new JButton("C");
        clearButton.setFont(new Font("Arial", Font.PLAIN, 40));
        clearButton.setBounds(450, 450, 80, 80);
        clearButton.addActionListener(this);
        jf.add(clearButton);

        minusButton = new JButton("-");
        minusButton.setFont(new Font("Arial", Font.PLAIN, 40));
        minusButton.setBounds(340, 340, 80, 80);
        minusButton.addActionListener(this);
        jf.add(minusButton);

        intoButton = new JButton("x");
        intoButton.setFont(new Font("Arial", Font.PLAIN, 40));
        intoButton.setBounds(340, 230, 80, 80);
        intoButton.addActionListener(this);
        jf.add(intoButton);

        divisionButton = new JButton("/");
        divisionButton.setFont(new Font("Arial", Font.PLAIN, 40));
        divisionButton.setBounds(340, 120, 80, 80);
        divisionButton.addActionListener(this);
        jf.add(divisionButton);

        jf.setVisible(true);
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    public static void main(String[] args) {
        new Calculator2();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == clearButton) {
            displayLabel.setText("");
            operator = "";
            oldValue = "";
            isOperatorClicked = false;
            operationCompleted = false;
        } else if (e.getSource() == equalButton) {
            String newValue = displayLabel.getText();
            float oldValuef = Float.parseFloat(oldValue);
            float newValuef = Float.parseFloat(newValue);

            if (!operator.isEmpty()) {
                float result = calculateResult(oldValuef, newValuef);
                displayLabel.setText(String.valueOf(result));
                oldValue = String.valueOf(result);
                operationCompleted = true;
            }
        } else if (isNumeric(e.getActionCommand())) {
            if (isOperatorClicked || operationCompleted) {
                displayLabel.setText(e.getActionCommand());
                isOperatorClicked = false;
                operationCompleted = false;
            } else {
                displayLabel.setText(displayLabel.getText() + e.getActionCommand());
            }
        } else {
            if (!isOperatorClicked) {
                oldValue = displayLabel.getText();
                isOperatorClicked = true;
            }

            operator = e.getActionCommand();
        }
    }

    private float calculateResult(float oldValue, float newValue) {
        switch (operator) {
            case "+":
                return oldValue + newValue;
            case "-":
                return oldValue - newValue;
            case "x":
                return oldValue * newValue;
            case "/":
                if (newValue != 0) {
                    return oldValue / newValue;
                } else {
                    displayLabel.setText("Error: Division by zero");
                }
        }
        return 0;
    }

    private boolean isNumeric(String str) {
        return str.matches("-?\\d+(\\.\\d+)?");
    }
}